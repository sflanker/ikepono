[tool.poetry]
name = "ikepono"
version = "0.1.0"
description = "Manta ray re-identification"
authors = ["Larry O'Brien <lobrien@knowing.net>"]
license = "MIT"
readme = "README.md"
packages  = [
    { include = "ikepono", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.11"
alembic = "1.13.1"
aniso8601 = "9.0.1"
anyio = "4.4.0"
argon2-cffi = "23.1.0"
argon2-cffi-bindings = "21.2.0"
arrow = "1.3.0"
asttokens = "2.4.1"
async-lru = "2.0.4"
attrs = "23.2.0"
babel = "2.15.0"
beautifulsoup4 = "4.12.3"
bleach = "6.1.0"
blinker = "1.8.2"
cachetools = "5.3.3"
certifi = "2024.6.2"
cffi = "1.16.0"
charset-normalizer = "3.3.2"
click = "8.1.7"
cloudpickle = "3.0.0"
comm = "0.2.2"
contourpy = "1.2.1"
cycler = "0.12.1"
debugpy = "1.8.1"
decorator = "5.1.1"
defusedxml = "0.7.1"
deprecated = "1.2.14"
docker = "7.1.0"
entrypoints = "0.4"
executing = "2.0.1"
fastjsonschema = "2.20.0"
filelock = "3.13.1"
flask = "3.0.3"
fonttools = "4.53.0"
fqdn = "1.5.1"
fsspec = "2024.2.0"
gitdb = "4.0.11"
gitpython = "3.1.43"
graphene = "3.3"
graphql-core = "3.2.3"
graphql-relay = "3.2.0"
greenlet = "3.0.3"
gunicorn = "22.0.0"
h11 = "0.14.0"
httpcore = "1.0.5"
httpx = "0.27.0"
idna = "3.7"
importlib-metadata = "7.1.0"
ipykernel = "6.29.4"
ipython = "8.25.0"
isoduration = "20.11.0"
itsdangerous = "2.2.0"
jedi = "0.19.1"
jinja2 = "3.1.3"
joblib = "1.4.2"
json5 = "0.9.25"
jsonpointer = "3.0.0"
jsonschema = "4.22.0"
jsonschema-specifications = "2023.12.1"
jupyter-events = "0.10.0"
jupyter-lsp = "2.2.5"
jupyter-client = "8.6.2"
jupyter-core = "5.7.2"
jupyter-server = "2.14.1"
jupyter-server-terminals = "0.5.3"
jupyterlab = "4.2.2"
jupyterlab-pygments = "0.3.0"
jupyterlab-server = "2.27.2"
jupytext = "1.16.2"
kiwisolver = "1.4.5"
mako = "1.3.5"
markdown = "3.6"
markdown-it-py = "3.0.0"
markupsafe = "2.1.5"
matplotlib = "3.9.0"
matplotlib-inline = "0.1.7"
mdit-py-plugins = "0.4.1"
mdurl = "0.1.2"
mistune = "3.0.2"
mlflow = "2.13.2"
mpmath = "1.3.0"
nbclient = "0.10.0"
nbconvert = "7.16.4"
nbformat = "5.10.4"
nest-asyncio = "1.6.0"
networkx = "3.2.1"
notebook-shim = "0.2.4"
numpy = "1.26.3"
nvidia-cublas-cu12 = "12.1.3.1"
nvidia-cuda-cupti-cu12 = "12.1.105"
nvidia-cuda-nvrtc-cu12 = "12.1.105"
nvidia-cuda-runtime-cu12 = "12.1.105"
nvidia-cudnn-cu12 = "8.9.2.26"
nvidia-cufft-cu12 = "11.0.2.54"
nvidia-curand-cu12 = "10.3.2.106"
nvidia-cusolver-cu12 = "11.4.5.107"
nvidia-cusparse-cu12 = "12.1.0.106"
nvidia-nccl-cu12 = "2.20.5"
nvidia-nvjitlink-cu12 = "12.1.105"
nvidia-nvtx-cu12 = "12.1.105"
opentelemetry-api = "1.25.0"
opentelemetry-sdk = "1.25.0"
opentelemetry-semantic-conventions = "0.46b0"
overrides = "7.7.0"
packaging = "24.1"
pandas = "2.2.2"
pandocfilters = "1.5.1"
parso = "0.8.4"
pexpect = "4.9.0"
pillow = "10.2.0"
platformdirs = "4.2.2"
prometheus-client = "0.20.0"
prompt-toolkit = "3.0.47"
protobuf = "4.25.3"
psutil = "5.9.8"
ptyprocess = "0.7.0"
pure-eval = "0.2.2"
pyarrow = "15.0.2"
pycocotools = "2.0.7"
pycparser = "2.22"
pygments = "2.18.0"
pyparsing = "3.1.2"
python-dateutil = "2.9.0.post0"
python-json-logger = "2.0.7"
pytorch-metric-learning = "2.6.0"
pytz = "2024.1"
pyyaml = "6.0.1"
pyzmq = "26.0.3"
querystring-parser = "1.2.4"
referencing = "0.35.1"
requests = "2.32.3"
rfc3339-validator = "0.1.4"
rfc3986-validator = "0.1.1"
rpds-py = "0.18.1"
scikit-learn = "1.5.0"
scipy = "1.13.1"
send2trash = "1.8.3"
six = "1.16.0"
smmap = "5.0.1"
sniffio = "1.3.1"
soupsieve = "2.5"
sqlalchemy = "2.0.30"
sqlparse = "0.5.0"
stack-data = "0.6.3"
sympy = "1.12"
terminado = "0.18.1"
threadpoolctl = "3.5.0"
tinycss2 = "1.3.0"
tornado = "6.4.1"
traitlets = "5.14.3"
triton = ">=2.3.0,<2.4.0"
types-python-dateutil = "2.9.0.20240316"
typing-extensions = "4.9.0"
tzdata = "2024.1"
uri-template = "1.3.0"
urllib3 = "2.2.1"
wcwidth = "0.2.13"
webcolors = "24.6.0"
webencodings = "0.5.1"
websocket-client = "1.8.0"
werkzeug = "3.0.3"
wrapt = "1.16.0"
zipp = "3.19.2"
torch = "2.3"
torchaudio = "2.3"
torchvision = "0.18"
poetry-plugin-export = "^1.8.0"
timm = "^1.0.8"
ruff = "^0.6.1"
faiss-cpu = "^1.8.0.post1"
torchinfo = "^1.8.0"
streamlit = "^1.38.0"


[[tool.poetry.source]]
name = "torch"
url = "https://download.pytorch.org/whl/cu121"
priority = "supplemental"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
